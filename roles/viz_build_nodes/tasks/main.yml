---

#   - name: print single node info
#     debug:
#       var: item.mac
#     with_items: "{{ viz_nodes }}"

   - name: add node to ww db
     command: wwsh -y node new {{ item.name }} --ipaddr={{ item.ip }} --hwaddr={{ item.mac }} -D {{ private_interface }}
     with_items: "{{ viz_nodes }}"

   - name: set nodes bootloader
     command: wwsh -y object modify -s bootloader=sda -t node {{ item.name }}
     with_items: "{{ viz_nodes }}"

   - name: set nodes partitions
     command: wwsh -y object modify -s diskpartition=sda -t node {{ item.name }}
     with_items: "{{ viz_nodes }}"

   - name: format partitions
     command: wwsh -y object modify -s diskformat=sda1,sda2,sda3 -t node {{ item.name }}
     with_items: "{{ viz_nodes }}"

   - name: define filesystems
     command: wwsh -y object modify -s filesystems="{{ sda1 }},{{ sda2 }},{{ sda3 }}" -t node {{ item.name }}
     with_items: "{{ viz_nodes }}"
#" for vim
  
   - name: remove node from slurm.conf if it exists already # to avoid duplication!
     lineinfile:
       dest: /etc/slurm/slurm.conf
       regexp: "^NodeName={{ item.name }}"
       state: absent
     with_items: "{{ viz_nodes }}"

   - name: add node to slurm.conf
     lineinfile:
       dest: /etc/slurm/slurm.conf
       line: "NodeName={{ item.name }} Sockets={{ item.sockets }} CoresPerSocket={{ item.corespersocket }} State=UNKNOWN"
       insertbefore: "^# PARTITIONS"
       state: present
     with_items: "{{ viz_nodes }}"

   - name: set files to provision
     command: wwsh -y provision set {{ item.name }} --vnfs={{ item.vnfs }} --bootstrap={{ build_kernel_ver }} --files=passwd,group,shadow,munge.key,slurm.conf,dynamic_hosts,network,slurm.conf
     with_items: "{{ viz_nodes }}"

   - name: restart dhcp if required
     service: name=dhcpd state=restarted enabled=yes
     when: dhcpd_enabled == true
 
   - name: disable dhcp if required
     service: name=dhcpd state=stopped enabled=no
     when: dhcpd_enabled == false

   - name: update pxeconfig to let node boot from pxe
     command: wwsh -y object modify -D bootlocal -t node {{ item.name }}
     with_items: "{{ compute_nodes }}"
 
   - name: wwsh pxe update
     command: wwsh -v pxe update
     register: command_result
     failed_when: "'Building Pxelinux' not in command_result.stdout"
